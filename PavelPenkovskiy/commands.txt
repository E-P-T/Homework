# Python Practice - Session 3

# Create a local folder and initialize it for git, create a remote repository on GitHub

@ mkdir local_folder_session_3
@ cd local_folder_session_3
@ git init
@ git remote add origin git@github.com:ppenkovskiy/session_3_homework.git 
@ git pull
@ git checkout main

# Create a text file in the folder and commit it;

@ touch file.txt
@ git add file.txt
@ git commit -m adding_file.txt

# Push the local repository to GitHub;

@ git push https://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@github.com/ppenkovskiy/session_3_homework.git

# Create a new branch (develop) and switch to it

@ git checkout -b develop

# Create a new branch from 'develop' and switch to it

@ git checkout -b develop_2

# Add the first line in the text file, commit, and push to remote

@ git add .
@ git commit -m file.txt_first_line
@ git push https://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@github.com/ppenkovskiy/session_3_homework.git

# Clone your repository from GitHub into a separate folder

@ git clone git@github.com:ppenkovskiy/session_3_homework.git 

# Create another branch from 'develop' and switch to it using cloned project

@ git checkout -n develop_3

# Add the first line of the text file (different from the first branch), commit, and push on remote;
    
@ git add .    
@ git commit -m adding_another_first_line
@ git push https://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@github.com/ppenkovskiy/session_3_homework.git
    
# Switch to develop;

@ git checkout develop

# Merge the first branch and push changes

@ git merge develop_2

# Merge the second branch and push changes;

@ git merge develop_3

# Resolve conflict;

(done)

# Commit and push a separate text file with a list of all the commands, which were used to solve the problem

@ git add .
@ git push https://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@github.com/ppenkovskiy/session_3_homework.git

